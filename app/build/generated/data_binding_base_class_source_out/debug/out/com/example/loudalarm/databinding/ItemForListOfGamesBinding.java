// Generated by view binder compiler. Do not edit!
package com.example.loudalarm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.loudalarm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemForListOfGamesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout itemGame;

  @NonNull
  public final View line2;

  @NonNull
  public final LinearLayout linearIn1;

  @NonNull
  public final TextView nameOfGame;

  @NonNull
  public final RelativeLayout relInGames;

  @NonNull
  public final RelativeLayout relInGamesUp;

  private ItemForListOfGamesBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout itemGame, @NonNull View line2, @NonNull LinearLayout linearIn1,
      @NonNull TextView nameOfGame, @NonNull RelativeLayout relInGames,
      @NonNull RelativeLayout relInGamesUp) {
    this.rootView = rootView;
    this.itemGame = itemGame;
    this.line2 = line2;
    this.linearIn1 = linearIn1;
    this.nameOfGame = nameOfGame;
    this.relInGames = relInGames;
    this.relInGamesUp = relInGamesUp;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemForListOfGamesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemForListOfGamesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_for_list_of_games, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemForListOfGamesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout itemGame = (RelativeLayout) rootView;

      id = R.id.line2;
      View line2 = ViewBindings.findChildViewById(rootView, id);
      if (line2 == null) {
        break missingId;
      }

      id = R.id.linear_in_1;
      LinearLayout linearIn1 = ViewBindings.findChildViewById(rootView, id);
      if (linearIn1 == null) {
        break missingId;
      }

      id = R.id.name_of_game;
      TextView nameOfGame = ViewBindings.findChildViewById(rootView, id);
      if (nameOfGame == null) {
        break missingId;
      }

      id = R.id.rel_in_games;
      RelativeLayout relInGames = ViewBindings.findChildViewById(rootView, id);
      if (relInGames == null) {
        break missingId;
      }

      id = R.id.rel_in_games_up;
      RelativeLayout relInGamesUp = ViewBindings.findChildViewById(rootView, id);
      if (relInGamesUp == null) {
        break missingId;
      }

      return new ItemForListOfGamesBinding((RelativeLayout) rootView, itemGame, line2, linearIn1,
          nameOfGame, relInGames, relInGamesUp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
