// Generated by view binder compiler. Do not edit!
package com.example.loudalarm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.loudalarm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AlertInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView alertTitle;

  @NonNull
  public final Button buttonCan;

  @NonNull
  public final ImageView imageAlertInfo;

  @NonNull
  public final AppCompatTextView infoText;

  @NonNull
  public final LinearLayout layoutHead;

  @NonNull
  public final LinearLayout layoutOkNot;

  @NonNull
  public final LinearLayout linearEdit;

  private AlertInfoBinding(@NonNull LinearLayout rootView, @NonNull TextView alertTitle,
      @NonNull Button buttonCan, @NonNull ImageView imageAlertInfo,
      @NonNull AppCompatTextView infoText, @NonNull LinearLayout layoutHead,
      @NonNull LinearLayout layoutOkNot, @NonNull LinearLayout linearEdit) {
    this.rootView = rootView;
    this.alertTitle = alertTitle;
    this.buttonCan = buttonCan;
    this.imageAlertInfo = imageAlertInfo;
    this.infoText = infoText;
    this.layoutHead = layoutHead;
    this.layoutOkNot = layoutOkNot;
    this.linearEdit = linearEdit;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AlertInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AlertInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.alert_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AlertInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alert_title;
      TextView alertTitle = ViewBindings.findChildViewById(rootView, id);
      if (alertTitle == null) {
        break missingId;
      }

      id = R.id.button_can;
      Button buttonCan = ViewBindings.findChildViewById(rootView, id);
      if (buttonCan == null) {
        break missingId;
      }

      id = R.id.image_alert_info;
      ImageView imageAlertInfo = ViewBindings.findChildViewById(rootView, id);
      if (imageAlertInfo == null) {
        break missingId;
      }

      id = R.id.info_text;
      AppCompatTextView infoText = ViewBindings.findChildViewById(rootView, id);
      if (infoText == null) {
        break missingId;
      }

      id = R.id.layout_head;
      LinearLayout layoutHead = ViewBindings.findChildViewById(rootView, id);
      if (layoutHead == null) {
        break missingId;
      }

      id = R.id.layout_ok_not;
      LinearLayout layoutOkNot = ViewBindings.findChildViewById(rootView, id);
      if (layoutOkNot == null) {
        break missingId;
      }

      id = R.id.linear_edit;
      LinearLayout linearEdit = ViewBindings.findChildViewById(rootView, id);
      if (linearEdit == null) {
        break missingId;
      }

      return new AlertInfoBinding((LinearLayout) rootView, alertTitle, buttonCan, imageAlertInfo,
          infoText, layoutHead, layoutOkNot, linearEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
