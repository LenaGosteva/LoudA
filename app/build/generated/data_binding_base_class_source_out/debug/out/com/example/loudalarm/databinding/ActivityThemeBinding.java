// Generated by view binder compiler. Do not edit!
package com.example.loudalarm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.loudalarm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityThemeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final ImageButton changeButton;

  @NonNull
  public final LinearLayout indicatorLayout;

  @NonNull
  public final TextView nameOfChangedTheme;

  @NonNull
  public final ImageButton nextbtn;

  @NonNull
  public final ViewPager slideViewPager;

  private ActivityThemeBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton backBtn,
      @NonNull ImageButton changeButton, @NonNull LinearLayout indicatorLayout,
      @NonNull TextView nameOfChangedTheme, @NonNull ImageButton nextbtn,
      @NonNull ViewPager slideViewPager) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.changeButton = changeButton;
    this.indicatorLayout = indicatorLayout;
    this.nameOfChangedTheme = nameOfChangedTheme;
    this.nextbtn = nextbtn;
    this.slideViewPager = slideViewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityThemeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityThemeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_theme, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityThemeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backBtn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.changeButton;
      ImageButton changeButton = ViewBindings.findChildViewById(rootView, id);
      if (changeButton == null) {
        break missingId;
      }

      id = R.id.indicator_layout;
      LinearLayout indicatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (indicatorLayout == null) {
        break missingId;
      }

      id = R.id.name_of_changed_theme;
      TextView nameOfChangedTheme = ViewBindings.findChildViewById(rootView, id);
      if (nameOfChangedTheme == null) {
        break missingId;
      }

      id = R.id.nextbtn;
      ImageButton nextbtn = ViewBindings.findChildViewById(rootView, id);
      if (nextbtn == null) {
        break missingId;
      }

      id = R.id.slideViewPager;
      ViewPager slideViewPager = ViewBindings.findChildViewById(rootView, id);
      if (slideViewPager == null) {
        break missingId;
      }

      return new ActivityThemeBinding((ConstraintLayout) rootView, backBtn, changeButton,
          indicatorLayout, nameOfChangedTheme, nextbtn, slideViewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
